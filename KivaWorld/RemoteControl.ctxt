#BlueJ class context
comment0.target=RemoteControl
comment0.text=\r\n\ The\ <tt>RemoteControl</tt>\ contains\ the\ <i>run()</i>\ method,\ the\ method\ we\ call\ to\ run\ the\ program.\ The\ program\ prompts\ the\ user\ to\ select\ a\ <tt>.txt</tt>\ file,\r\n\ then\ using\ <tt>FileResource</tt>,\ another\ window\ will\ open\ up\ to\ display\ the\ files\ the\ user\ can\ choose\ from.\ Upon\ selecting\ a\ valid\ file,\ the\ program\r\n\ prints\ diagnostic\ information\ to\ the\ console.\ This\ includes\ data\ about\ the\ <tt>Kiva</tt>'s\ initial\ location,\ the\ status\ of\ its\ boolean\ fields,\ and\ where\r\n\ the\ Pod\ and\ Drop\ Zones\ are.\ The\ user\ will\ be\ prompted\ to\ enter\ in\ a\ series\ of\ commands.\ These\ commands\ are\ taken\ in\ as\ a\ single\ string\ and\ are\ then\ converted\r\n\ into\ an\ array\ of\ enums\ that\ the\ <tt>Kiva</tt>\ can\ interpret.\ A\ success,\ failure,\ or\ error\ message\ is\ displayed\ after\ processing\ the\ commands.\r\n\ \r\n\ @author\ Franz\ Jacob\ Hernandez\ (herfrn@amazon.com)\ \r\n\ @version\ 0.10\r\n\ @since\ 10-03-2021\r\n
comment1.params=
comment1.target=RemoteControl()
comment1.text=\r\n\ Builds\ a\ new\ RemoteControl.\r\n\ The\ constructor\ is\ only\ called\ for\ use\ in\ test\ classes,\ since\ the\ program\ runs\ through\ the\ run()\ method\ call\ within\ this\ class.\r\n\ @see\ \#run\r\n
comment2.params=
comment2.target=void\ run()
comment2.text=\r\n\ Executes\ the\ <tt>Kiva</tt>\ program.\r\n\ Prompts\ the\ user\ for\ the\ floor\ map\ to\ load,\ displays\ the\ map,\ and\ asks\ the\ user\ for\ commands\ the\ <tt>Kiva</tt>\ can\ execute.\r\n\ Calls\ helper\ functions\ to\ display\ diagnostic\ information\ and\ to\ display\ specific\ statements\ at\ the\ end\ of\ the\ commands.\r\n\ Has\ <tt>Kiva</tt>\ traverse\ through\ an\ array\ of\ <tt>KivaCommand</tt>\ in\ order\ to\ perform\ moves/actions.\r\n\ \r\n\ @see\ \#convertToKivaCommands\r\n\ @see\ \#displayDiagnostics\r\n\ @see\ \#outputPrintStatement\r\n\r\n
comment3.params=kiva\ commands
comment3.target=void\ outputPrintStatement(Kiva,\ KivaCommand[])
comment3.text=\r\n\ Displays\ a\ message\ to\ the\ user\ upon\ completion\ of\ program\ execution.\r\n\ The\ <tt>Kiva</tt>\ successfully\ dropping\ the\ Pod\ at\ the\ correct\ Drop\ Zone\ is\ the\ determing\ factor\ for\ what\ message\ gets\ printed\ to\ the\ console.\r\n
comment4.params=kiva\ map
comment4.target=void\ displayDiagnostics(Kiva,\ FloorMap)
comment4.text=\r\n\ Prints\ diagnostic\ information\ to\ console.\r\n\ After\ a\ <tt>.txt</tt>\ file\ is\ chosen\ by\ the\ user,\ information\ regarding\ the\ <tt>KivaM</tt>\ and\ the\ <tt>FloorMap</tt>\ are\ shown\ to\ the\ user\r\n\ so\ they\ can\ make\ an\ informed\ decision\ when\ inputting\ commands.\r\n
comment5.params=input
comment5.target=KivaCommand[]\ convertToKivaCommands(java.lang.String)
comment5.text=\r\n\ Takes\ in\ a\ <tt>String</tt>\ from\ the\ user\ and\ converts\ the\ <String>\ into\ data\ the\ <tt>Kiva</tt>\ can\ interpret.\r\n\ Each\ <tt>char</tt>\ of\ the\ given\ <tt>String</tt>,\ if\ it\ has\ an\ analagous\ value\ in\ <tt>KivaCommand</tt>,\ gets\ turned\ into\ an\ enum\ of\ that\ class\ and\ stored\ in\r\n\ an\ array.\ Later,\ the\ <tt>Kiva</tt>\ will\ traverse\ that\ array\ and\ attempt\ to\ execute\ each\ command.\r\n\ \r\n\ @see\ \#run\r\n\ @return\ a\ collection\ of\ <tt>KivaCommand</tt>\ values\ for\ the\ <tt>Kiva</tt>\ to\ execute\ \r\n
numComments=6
